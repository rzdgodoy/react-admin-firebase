{"version":3,"file":"index.js","sources":["../src/misc/arrayHelpers.ts","../src/misc/objectFlatten.ts","../src/misc/logger/logger-base.ts","../src/misc/logger/firestore-logger.ts","../src/misc/logger/logger.ts","../src/misc/dispatcher.ts","../src/misc/internal.models.ts","../src/misc/translate-from-firestore.ts","../src/misc/document-parser.ts","../src/misc/pathHelper.ts","../src/misc/translate-to-firestore.ts","../src/providers/database/firebase/FirebaseWrapper.ts","../src/providers/AuthProvider.ts","../src/misc/status-code-translator.ts","../src/providers/database/ResourceManager.ts","../src/providers/database/FireClient.ts","../src/misc/storage-parser.ts","../src/misc/metadata-parser.ts","../src/misc/firebase-models.ts","../src/providers/lazy-loading/queryCursors.ts","../src/providers/lazy-loading/paramsToQuery.ts","../src/providers/lazy-loading/FirebaseLazyLoadingClient.ts","../src/providers/DataProvider.ts","../src/providers/queries/GetList.ts","../src/providers/queries/GetOne.ts","../src/providers/queries/GetMany.ts","../src/providers/queries/GetManyReference.ts","../src/providers/commands/Update.ts","../src/providers/commands/UpdateMany.ts","../src/providers/commands/Create.ts","../src/providers/commands/Delete.ts","../src/providers/commands/Delete.Soft.ts","../src/providers/commands/DeleteMany.ts","../src/providers/commands/DeleteMany.Soft.ts"],"sourcesContent":["import { get, isEmpty } from 'lodash';\nimport { getFieldReferences, SearchObj } from './objectFlatten';\n\nexport function sortArray(\n  data: Array<{}>,\n  field: string,\n  dir: 'asc' | 'desc'\n): void {\n  data.sort((a: {}, b: {}) => {\n    const rawA = get(a, field);\n    const rawB = get(b, field);\n    const isAsc = dir === 'asc';\n\n    const isNumberField = Number.isFinite(rawA) && Number.isFinite(rawB);\n    if (isNumberField) {\n      return basicSort(rawA, rawB, isAsc);\n    }\n    const isStringField = typeof rawA === 'string' && typeof rawB === 'string';\n    if (isStringField) {\n      const aParsed = rawA.toLowerCase();\n      const bParsed = rawB.toLowerCase();\n      return basicSort(aParsed, bParsed, isAsc);\n    }\n    const isDateField = rawA instanceof Date && rawB instanceof Date;\n    if (isDateField) {\n      return basicSort(rawA, rawB, isAsc);\n    }\n    return basicSort(!!rawA, !!rawB, isAsc);\n  });\n}\n\nfunction basicSort(aValue: any, bValue: any, isAsc: boolean) {\n  if (aValue > bValue) {\n    return isAsc ? 1 : -1;\n  }\n  if (aValue < bValue) {\n    return isAsc ? -1 : 1;\n  }\n  return 0;\n}\n\nexport function filterArray(\n  data: Array<{}>,\n  searchFields?: { [field: string]: string | number | boolean | null }\n): Array<{}> {\n  if (!searchFields || isEmpty(searchFields)) {\n    return data;\n  }\n  const searchObjs: SearchObj[] = [];\n  Object.keys(searchFields).map((fieldName) => {\n    const fieldValue = searchFields[fieldName];\n    const getSubObjects = getFieldReferences(fieldName, fieldValue);\n    searchObjs.push(...getSubObjects);\n  });\n  const filtered = data.filter((row) =>\n    searchObjs.reduce((acc, cur) => {\n      const res = doesRowMatch(row, cur.searchField, cur.searchValue);\n      return res && acc;\n    }, true as boolean)\n  );\n  return filtered;\n}\n\nexport function doesRowMatch(\n  row: {},\n  searchField: string,\n  searchValue: any\n): boolean {\n  const searchThis = get(row, searchField);\n  const bothAreFalsey = !searchThis && !searchValue;\n  if (bothAreFalsey) {\n    return true;\n  }\n  const nothingToSearch = !searchThis;\n  if (nothingToSearch) {\n    return false;\n  }\n  const isStringSearch = typeof searchValue === 'string';\n  if (isStringSearch) {\n    return searchThis\n      .toString()\n      .toLowerCase()\n      .includes(searchValue.toLowerCase());\n  }\n  const isBooleanOrNumber =\n    typeof searchValue === 'boolean' || typeof searchValue === 'number';\n  if (isBooleanOrNumber) {\n    return searchThis === searchValue;\n  }\n  const isArraySearch = Array.isArray(searchValue);\n  if (isArraySearch) {\n    return searchValue.includes(searchThis);\n  }\n  return false;\n}\n","type SearchValues = {} | number | string | boolean | null;\ntype SearchValue = SearchValues | SearchValue[];\n\nexport interface SearchObj {\n  searchField: string;\n  searchValue: SearchValue;\n}\nexport function getFieldReferences(\n  fieldName: string,\n  value: {} | SearchValue\n): SearchObj[] {\n  const isFalsy = !value;\n  const isSimple =\n    isFalsy ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean';\n\n  if (isSimple) {\n    return [\n      {\n        searchField: fieldName,\n        searchValue: value as SearchValue,\n      },\n    ];\n  }\n  const tree = {} as Record<string, SearchValue>;\n  tree[fieldName] = value;\n  return objectFlatten(tree);\n}\n\nexport function objectFlatten(tree: {}): SearchObj[] {\n  var leaves: SearchObj[] = [];\n  var recursivelyWalk = (obj: any, path: string | null) => {\n    path = path || '';\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const objVal = obj && obj[key];\n        const currentPath = !!path ? path + '.' + key : key;\n        const isWalkable =\n          typeof objVal === 'object' || objVal instanceof Array;\n        if (isWalkable) {\n          recursivelyWalk(objVal, currentPath);\n        } else {\n          leaves.push({ searchField: currentPath, searchValue: objVal });\n        }\n      }\n    }\n  };\n  recursivelyWalk(tree, null);\n  return leaves;\n}\n","type LogFn = (...args: any) => void;\n\nexport const LogNoOp: LogFn = (...args: any) => null;\n\nexport class LoggerBase {\n  constructor(private title: string, private cacheEnabledKey: string) {}\n\n  private isEnabled() {\n    return !!localStorage.getItem(this.cacheEnabledKey);\n  }\n\n  SetEnabled(isEnabled: boolean) {\n    if (isEnabled) {\n      localStorage.setItem(this.cacheEnabledKey, 'true');\n    } else {\n      localStorage.removeItem(this.cacheEnabledKey);\n    }\n  }\n\n  public get log() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.log.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n\n  public get warn() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.warn.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n\n  public get error() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.error.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n}\n","import { RAFirebaseOptions } from 'providers/options';\nimport { LoggerBase, LogNoOp } from './logger-base';\n\nconst LOGGER_ENABLEDKEY = 'LOGGING_FIRESTORE_COSTS_ENABLED';\nconst logger = new LoggerBase('ðŸ’¸firestore-costs:', LOGGER_ENABLEDKEY);\n\nconst KEY_SINGLE = 'firecosts-single-reads';\n\nexport interface IFirestoreLogger {\n  logDocument: (count: number) => Function;\n  SetEnabled: (isEnabled: boolean) => void;\n  ResetCount: (shouldReset: boolean) => void;\n}\n\nexport function MakeFirestoreLogger(\n  options: RAFirebaseOptions\n): IFirestoreLogger {\n  function notEnabled() {\n    return !options?.lazyLoading?.enabled;\n  }\n\n  function incrementRead(incrementBy = 1) {\n    const currentCountRaw = localStorage.getItem(KEY_SINGLE) || '';\n    const currentCount = parseInt(currentCountRaw) || 0;\n    const incremented = currentCount + incrementBy;\n    localStorage.setItem(KEY_SINGLE, incremented + '');\n    return incremented;\n  }\n  function clearCache() {\n    localStorage.removeItem(KEY_SINGLE);\n  }\n  return {\n    SetEnabled(isEnabled: boolean) {\n      logger.SetEnabled(isEnabled);\n    },\n    ResetCount(shouldReset: boolean) {\n      shouldReset && clearCache();\n    },\n    logDocument(docCount: number) {\n      if (notEnabled()) {\n        return LogNoOp;\n      }\n      const count = incrementRead(docCount);\n      const suffix = `+${docCount} (session total=${count} documents read)`;\n      const boundLogFn: (...args: any) => void = logger.log.bind(\n        console,\n        suffix\n      );\n      return boundLogFn;\n    },\n  };\n}\n","import { LoggerBase } from './logger-base';\n\nconst LOGGER_ENABLEDKEY = 'LOGGING_ENABLED';\nexport const logger = new LoggerBase('ðŸ”¥raf:', LOGGER_ENABLEDKEY);\n\nexport const log = logger.log;\nexport const logError = logger.error;\nexport const logWarn = logger.warn;\n","import { log } from './logger';\n\nexport type DispatchEvent =\n  | 'FILE_UPLOAD_WILL_START'\n  | 'FILE_UPLOAD_PROGRESS'\n  | 'FILE_UPLOAD_PAUSED'\n  | 'FILE_UPLOAD_RUNNING'\n  | 'FILE_UPLOAD_CANCELED'\n  | 'FILE_UPLOAD_COMPLETE'\n  | 'FILE_SAVED';\n\nexport function dispatch(\n  eventName: DispatchEvent,\n  fileName: string,\n  data?: any\n): void {\n  const eventMonitor = document.getElementById('eventMonitor');\n  if (!eventMonitor) {\n    log(\n      `eventMonitor not found to dispatch event ${eventName} for ${fileName}`\n    );\n    return;\n  }\n  const eventData = { fileName, data };\n  let event = new CustomEvent(eventName, { detail: eventData });\n  eventMonitor.dispatchEvent(event);\n}\n","export const REF_INDENTIFIER = '___REF_FULLPATH_';\n\nexport interface ParsedRefDoc {\n  ___refpath: string;\n  ___refid: string;\n}\n","import { getDownloadURL, ref } from 'firebase/storage';\nimport { has, set } from 'lodash';\nimport { IFirebaseWrapper } from 'providers/database';\nimport { FireStoreDocumentRef } from './firebase-models';\nimport { REF_INDENTIFIER } from './internal.models';\nimport { logError } from './logger';\n\nexport interface RefDocFound {\n  fieldPath: string;\n  refDocPath: string;\n}\n\nexport interface FromFirestoreResult {\n  parsedDoc: any;\n  refdocs: RefDocFound[];\n}\n\nexport function translateDocFromFirestore(obj: any) {\n  const isObject = !!obj && typeof obj === 'object';\n  const result: FromFirestoreResult = {\n    parsedDoc: {},\n    refdocs: [],\n  };\n  if (!isObject) {\n    return result;\n  }\n  Object.keys(obj).map((key) => {\n    const value = obj[key];\n    obj[key] = recusivelyCheckObjectValue(value, key, result);\n  });\n  result.parsedDoc = obj;\n  return result;\n}\n\nexport function recusivelyCheckObjectValue(\n  input: any,\n  fieldPath: string,\n  result: FromFirestoreResult\n): any {\n  const isFalsey = !input;\n  if (isFalsey) {\n    return input;\n  }\n  const isPrimitive = typeof input !== 'object';\n  if (isPrimitive) {\n    return input;\n  }\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\n  if (isTimestamp) {\n    return input.toDate();\n  }\n  const isArray = Array.isArray(input);\n  if (isArray) {\n    return (input as any[]).map((value, index) =>\n      recusivelyCheckObjectValue(value, `${fieldPath}.${index}`, result)\n    );\n  }\n  const isDocumentReference = isInputADocReference(input);\n  if (isDocumentReference) {\n    const documentReference = input as FireStoreDocumentRef;\n    result.refdocs.push({\n      fieldPath: fieldPath,\n      refDocPath: documentReference.path,\n    });\n    return documentReference.id;\n  }\n  const isObject = typeof input === 'object';\n  if (isObject) {\n    Object.keys(input).map((key) => {\n      const value = input[key];\n      input[key] = recusivelyCheckObjectValue(value, key, result);\n    });\n    return input;\n  }\n  return input;\n}\n\nfunction isInputADocReference(input: any): boolean {\n  const isDocumentReference =\n    typeof input.id === 'string' &&\n    typeof input.firestore === 'object' &&\n    typeof input.parent === 'object' &&\n    typeof input.path === 'string';\n  return isDocumentReference;\n}\n\nexport function applyRefDocs(doc: any, refDocs: RefDocFound[]) {\n  refDocs.map((d) => {\n    set(doc, REF_INDENTIFIER + d.fieldPath, d.refDocPath);\n  });\n  return doc;\n}\n\nexport const recursivelyMapStorageUrls = async (\n  fireWrapper: IFirebaseWrapper,\n  fieldValue: any\n): Promise<any> => {\n  const isPrimitive = !fieldValue || typeof fieldValue !== 'object';\n  if (isPrimitive) {\n    return fieldValue;\n  }\n  const isFileField = has(fieldValue, 'src');\n  if (isFileField) {\n    try {\n      const src = await getDownloadURL(\n        ref(fireWrapper.storage(), fieldValue.src)\n      );\n      return {\n        ...fieldValue,\n        src,\n      };\n    } catch (error) {\n      logError(`Error when getting download URL`, {\n        error,\n      });\n      return fieldValue;\n    }\n  }\n  const isArray = Array.isArray(fieldValue);\n  if (isArray) {\n    return Promise.all(\n      (fieldValue as any[]).map(async (value, index) => {\n        fieldValue[index] = await recursivelyMapStorageUrls(fireWrapper, value);\n      })\n    );\n  }\n  const isDocumentReference = isInputADocReference(fieldValue);\n  if (isDocumentReference) {\n    return fieldValue;\n  }\n  const isObject = !isArray && typeof fieldValue === 'object';\n  if (isObject) {\n    return Promise.all(\n      Object.keys(fieldValue).map(async (key) => {\n        const value = fieldValue[key];\n        fieldValue[key] = await recursivelyMapStorageUrls(fireWrapper, value);\n      })\n    );\n  }\n};\n","import {\n  FireStoreDocumentSnapshot,\n  FireStoreQueryDocumentSnapshot,\n} from './firebase-models';\nimport { logWarn } from './logger';\nimport * as ra from './react-admin-models';\nimport {\n  applyRefDocs,\n  translateDocFromFirestore,\n} from './translate-from-firestore';\n\nexport function parseFireStoreDocument<T extends ra.RaRecord>(\n  doc: FireStoreQueryDocumentSnapshot | FireStoreDocumentSnapshot | undefined\n): T {\n  if (!doc) {\n    logWarn('parseFireStoreDocument: no doc', { doc });\n    return {} as T;\n  }\n  const data = doc.data();\n  const result = translateDocFromFirestore(data);\n  const dataWithRefs = applyRefDocs(result.parsedDoc, result.refdocs);\n  // React Admin requires an id field on every document,\n  // So we can just use the firestore document id\n  return { id: doc.id, ...dataWithRefs } as T;\n}\n","import path from 'path-browserify';\n\nexport function getAbsolutePath(\n  rootRef: undefined | string | (() => string),\n  relativePath: string | null\n): string {\n  if (!rootRef) {\n    return relativePath + '';\n  }\n  if (!relativePath) {\n    throw new Error(\n      'Resource name must be a string of length greater than 0 characters'\n    );\n  }\n  const rootRefValue = typeof rootRef === 'string' ? rootRef : rootRef();\n  const withSlashes = path.join('/', rootRefValue, '/', relativePath, '/');\n  const slashCount = withSlashes.split('/').length - 1;\n  if (slashCount % 2) {\n    throw new Error(`The rootRef path must point to a \"document\"\n    not a \"collection\"e.g. /collection/document/ or\n    /collection/document/collection/document/`);\n  }\n  return withSlashes.slice(1, -1);\n}\n\nexport function joinPaths(...args: string[]) {\n  return path.join(...args);\n}\n","import { REF_INDENTIFIER } from './internal.models';\n\ninterface ParsedUpload {\n  fieldDotsPath: string;\n  fieldSlashesPath: string;\n  rawFile: File | any;\n}\n\ninterface ParsedDocRef {\n  fieldDotsPath: string;\n  refPath: string;\n}\n\ninterface ParseResult {\n  parsedDoc: any;\n  uploads: ParsedUpload[];\n  refdocs: ParsedDocRef[];\n}\n\nexport function translateDocToFirestore(obj: any): ParseResult {\n  const isObject = !!obj && typeof obj === 'object';\n  const result: ParseResult = {\n    uploads: [],\n    refdocs: [],\n    parsedDoc: {},\n  };\n  if (!isObject) {\n    return result;\n  }\n  Object.keys(obj).map((key) => {\n    const value = obj[key];\n    recusivelyParseObjectValue(value, key, result);\n  });\n  result.parsedDoc = obj;\n  return result;\n}\n\nexport function recusivelyParseObjectValue(\n  input: any,\n  fieldPath: string,\n  result: ParseResult\n): any {\n  const isFalsey = !input;\n  if (isFalsey) {\n    return input;\n  }\n  const isRefField =\n    typeof fieldPath === 'string' && fieldPath.includes(REF_INDENTIFIER);\n  if (isRefField) {\n    const refDocFullPath = input as string;\n    result.refdocs.push({\n      fieldDotsPath: fieldPath,\n      refPath: refDocFullPath,\n    });\n    return;\n  }\n  const isPrimitive = typeof input !== 'object';\n  if (isPrimitive) {\n    return input;\n  }\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\n  if (isTimestamp) {\n    return input.toDate();\n  }\n  const isArray = Array.isArray(input);\n  if (isArray) {\n    return (input as []).map((value, index) =>\n      recusivelyParseObjectValue(value, `${fieldPath}.${index}`, result)\n    );\n  }\n  const isFileField = !!input && input.hasOwnProperty('rawFile');\n  if (isFileField) {\n    result.uploads.push({\n      fieldDotsPath: fieldPath,\n      fieldSlashesPath: fieldPath.split('.').join('/'),\n      rawFile: input.rawFile,\n    });\n    delete input.rawFile;\n    return;\n  }\n  Object.keys(input).map((key) => {\n    const value = input[key];\n    recusivelyParseObjectValue(value, `${fieldPath}.${key}`, result);\n  });\n  return input;\n}\n","import { FirebaseApp, getApp, getApps, initializeApp } from 'firebase/app';\nimport {\n  browserLocalPersistence,\n  browserSessionPersistence,\n  getAuth,\n  inMemoryPersistence,\n  onAuthStateChanged,\n  Persistence,\n  signInWithEmailAndPassword,\n  signOut,\n} from 'firebase/auth';\nimport {\n  collection,\n  doc,\n  getFirestore,\n  serverTimestamp as firestoreServerTimestamp,\n  writeBatch,\n} from 'firebase/firestore';\nimport {\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from 'firebase/storage';\nimport {\n  FireApp,\n  FireAuth,\n  FireAuthUserCredentials,\n  FireStorage,\n  FireStoragePutFileResult,\n  FireStore,\n  FireStoreBatch,\n  FireStoreCollectionRef,\n  FireUploadTaskSnapshot,\n  FireUser,\n} from 'misc/firebase-models';\nimport { log } from '../../../misc';\nimport { RAFirebaseOptions } from '../../options';\nimport { IFirebaseWrapper } from './IFirebaseWrapper';\n\nexport class FirebaseWrapper implements IFirebaseWrapper {\n  private readonly _app: FireApp;\n  private readonly _firestore: FireStore;\n  private readonly _storage: FireStorage;\n  private readonly _auth: FireAuth;\n  public options: RAFirebaseOptions;\n\n  constructor(inputOptions: RAFirebaseOptions | undefined, firebaseConfig: {}) {\n    const optionsSafe = inputOptions || {};\n    this.options = optionsSafe;\n    this._app = (window as any)['_app'] = ObtainFirebaseApp(\n      firebaseConfig,\n      optionsSafe\n    );\n    this._firestore = getFirestore(this._app);\n    this._storage = getStorage(this._app);\n    this._auth = getAuth(this._app);\n  }\n  dbGetCollection(absolutePath: string): FireStoreCollectionRef {\n    return collection(this._firestore, absolutePath);\n  }\n  dbCreateBatch(): FireStoreBatch {\n    return writeBatch(this._firestore);\n  }\n  dbMakeNewId(): string {\n    return doc(collection(this._firestore, 'collections')).id;\n  }\n\n  public OnUserLogout(callBack: (u: FireUser | null) => any) {\n    this._auth.onAuthStateChanged((user) => {\n      const isLoggedOut = !user;\n      log('FirebaseWrapper.OnUserLogout', { user, isLoggedOut });\n      if (isLoggedOut) {\n        callBack(user);\n      }\n    });\n  }\n  putFile(storagePath: string, rawFile: any): FireStoragePutFileResult {\n    const task = uploadBytesResumable(ref(this._storage, storagePath), rawFile);\n    const taskResult = new Promise<FireUploadTaskSnapshot>((res, rej) =>\n      task.then(res).catch(rej)\n    );\n\n    const downloadUrl = taskResult\n      .then((t) => getDownloadURL(t.ref))\n      .then((url) => url as string);\n\n    return {\n      task,\n      taskResult,\n      downloadUrl,\n    };\n  }\n  async getStorageDownloadUrl(fieldSrc: string): Promise<string> {\n    return getDownloadURL(ref(this._storage, fieldSrc));\n  }\n  public serverTimestamp() {\n    // This line doesn't work for some reason, might be firebase sdk.\n    return firestoreServerTimestamp();\n  }\n\n  async authSetPersistence(persistenceInput: 'session' | 'local' | 'none') {\n    let persistenceResolved: Persistence;\n    switch (persistenceInput) {\n      case 'local':\n        persistenceResolved = browserLocalPersistence;\n        break;\n      case 'none':\n        persistenceResolved = inMemoryPersistence;\n        break;\n      case 'session':\n      default:\n        persistenceResolved = browserSessionPersistence;\n        break;\n    }\n\n    log('setPersistence', { persistenceInput, persistenceResolved });\n\n    return this._auth\n      .setPersistence(persistenceResolved)\n      .catch((error) => console.error(error));\n  }\n  async authSigninEmailPassword(\n    email: string,\n    password: string\n  ): Promise<FireAuthUserCredentials> {\n    const user = await signInWithEmailAndPassword(this._auth, email, password);\n    return user;\n  }\n  async authSignOut(): Promise<void> {\n    return signOut(this._auth);\n  }\n  async authGetUserLoggedIn(): Promise<FireUser> {\n    return new Promise((resolve, reject) => {\n      const auth = this._auth;\n      if (auth.currentUser) return resolve(auth.currentUser);\n      const unsubscribe = onAuthStateChanged(this._auth, (user) => {\n        unsubscribe();\n        if (user) {\n          resolve(user);\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n  public async GetUserLogin(): Promise<FireUser> {\n    return this.authGetUserLoggedIn();\n  }\n\n  /** @deprecated */\n  public auth(): FireAuth {\n    return this._auth;\n  }\n  /** @deprecated */\n  public storage(): FireStorage {\n    return this._storage;\n  }\n  /** @deprecated */\n  public GetApp(): FireApp {\n    return this._app;\n  }\n  /** @deprecated */\n  public db(): FireStore {\n    return this._firestore;\n  }\n}\n\nfunction ObtainFirebaseApp(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n): FirebaseApp {\n  if (options.app) {\n    return options.app;\n  }\n  const apps = getApps();\n\n  const isInitialized = !!apps?.length;\n\n  if (isInitialized) {\n    return getApp();\n  } else {\n    return initializeApp(firebaseConfig);\n  }\n}\n","import { log, logger, logWarn, retrieveStatusTxt } from '../misc';\nimport { FireUser } from '../misc/firebase-models';\nimport {\n  AuthProvider as RaAuthProvider,\n  UserIdentity,\n} from '../misc/react-admin-models';\nimport { messageTypes } from './../misc/messageTypes';\nimport { IFirebaseWrapper } from './database';\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\nimport { RAFirebaseOptions } from './options';\n\nclass AuthClient {\n  private fireWrapper: IFirebaseWrapper;\n\n  constructor(firebaseConfig: {}, optionsInput?: RAFirebaseOptions) {\n    const options = optionsInput || {};\n    log('Auth Client: initializing...', { firebaseConfig, options });\n    this.fireWrapper = new FirebaseWrapper(options, firebaseConfig);\n    options.persistence && this.setPersistence(options.persistence);\n  }\n\n  setPersistence(persistenceInput: 'session' | 'local' | 'none') {\n    return this.fireWrapper.authSetPersistence(persistenceInput);\n  }\n\n  public async HandleAuthLogin(params: { username: string; password: string }) {\n    const { username, password } = params;\n\n    if (username && password) {\n      try {\n        const user = await this.fireWrapper.authSigninEmailPassword(\n          username,\n          password\n        );\n        log('HandleAuthLogin: user sucessfully logged in', { user });\n        return user;\n      } catch (e) {\n        log('HandleAuthLogin: invalid credentials', { params });\n        throw new Error('Login error: invalid credentials');\n      }\n    } else {\n      return this.getUserLogin();\n    }\n  }\n\n  public HandleAuthLogout() {\n    return this.fireWrapper.authSignOut();\n  }\n\n  public HandleAuthError(errorHttp: messageTypes.HttpErrorType) {\n    log('HandleAuthLogin: invalid credentials', { errorHttp });\n    const status = !!errorHttp && errorHttp.status;\n    const statusTxt = retrieveStatusTxt(status);\n    if (statusTxt === 'ok') {\n      log('API is actually authenticated');\n      return Promise.resolve();\n    }\n    logWarn('Received authentication error from API');\n    return Promise.reject();\n  }\n\n  public async HandleAuthCheck(): Promise<any> {\n    return this.getUserLogin();\n  }\n\n  public getUserLogin(): Promise<FireUser> {\n    return this.fireWrapper.authGetUserLoggedIn();\n  }\n\n  public async HandleGetPermissions() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.claims;\n    } catch (e) {\n      log('HandleGetPermission: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n\n  public async HandleGetIdentity(): Promise<UserIdentity> {\n    try {\n      const { uid, displayName, photoURL } = await this.getUserLogin();\n      const identity: UserIdentity = {\n        id: uid,\n        fullName: `${displayName ?? ''}`,\n        avatar: `${photoURL ?? ''}`,\n      };\n      return identity;\n    } catch (e) {\n      log('HandleGetIdentity: no user is logged in', {\n        e,\n      });\n      return null as any;\n    }\n  }\n\n  public async HandleGetJWTAuthTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.authTime;\n    } catch (e) {\n      log('HandleGetJWTAuthTime: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n\n  public async HandleGetJWTExpirationTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.expirationTime;\n    } catch (e) {\n      log(\n        'HandleGetJWTExpirationTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTSignInProvider() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.signInProvider;\n    } catch (e) {\n      log(\n        'HandleGetJWTSignInProvider: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTIssuedAtTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.issuedAtTime;\n    } catch (e) {\n      log(\n        'HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTToken() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.token;\n    } catch (e) {\n      log('HandleGetJWTToken: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n}\n\nexport function AuthProvider(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n): ReactAdminFirebaseAuthProvider {\n  VerifyAuthProviderArgs(firebaseConfig, options);\n  logger.SetEnabled(!!options?.logging);\n  const auth = new AuthClient(firebaseConfig, options);\n\n  const provider: ReactAdminFirebaseAuthProvider = {\n    // React Admin Interface\n    login: (params) => auth.HandleAuthLogin(params),\n    logout: () => auth.HandleAuthLogout(),\n    checkAuth: () => auth.HandleAuthCheck(),\n    checkError: (error) => auth.HandleAuthError(error),\n    getPermissions: () => auth.HandleGetPermissions(),\n    getIdentity: () => auth.HandleGetIdentity(),\n    // Custom Functions\n    getAuthUser: () => auth.getUserLogin(),\n    getJWTAuthTime: () => auth.HandleGetJWTAuthTime(),\n    getJWTExpirationTime: () => auth.HandleGetJWTExpirationTime(),\n    getJWTSignInProvider: () => auth.HandleGetJWTSignInProvider(),\n    getJWTClaims: () => auth.HandleGetPermissions(),\n    getJWTToken: () => auth.HandleGetJWTToken(),\n  };\n  return provider;\n}\n\nexport type ReactAdminFirebaseAuthProvider = RaAuthProvider & {\n  // Custom Functions\n  getAuthUser: () => Promise<FireUser>;\n  getJWTAuthTime: () => Promise<string | null>;\n  getJWTExpirationTime: () => Promise<string | null>;\n  getJWTSignInProvider: () => Promise<string | null>;\n  getJWTClaims: () => Promise<{ [key: string]: any } | null>;\n  getJWTToken: () => Promise<string | null>;\n};\n\nfunction VerifyAuthProviderArgs(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n) {\n  const hasNoApp = !options || !options.app;\n  const hasNoConfig = !firebaseConfig;\n  if (hasNoConfig && hasNoApp) {\n    throw new Error(\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\n    );\n  }\n}\n","// From firebase SDK\n\nimport { logError } from './logger';\n\n// tslint:disable-next-line:max-line-length\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\nexport function retrieveStatusTxt(status: number): 'ok' | 'unauthenticated' {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 401: // 'unauthenticated'\n    case 403: // 'permission-denied'\n      return 'unauthenticated';\n\n    case 0: // 'internal'\n    case 400: // 'invalid-argument'\n    case 404: // 'not-found'\n    case 409: // 'aborted'\n    case 429: // 'resource-exhausted'\n    case 499: // 'cancelled'\n    case 500: // 'internal'\n    case 501: // 'unimplemented'\n    case 503: // 'unavailable'\n    case 504: // 'deadline-exceeded'\n    default:\n      // ignore\n      return 'ok';\n  }\n}\n\n// From firebase SDK\n// tslint:disable-next-line:max-line-length\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\nexport function retrieveStatusCode(statusTxt: string): number {\n  // Make sure any successful status is OK.\n  const regexResult = /\\[code\\=([\\w-]*)/g.exec(statusTxt);\n  const status = Array.isArray(regexResult) && regexResult[1];\n  if (!status) {\n    logError('unknown StatusCode ', { statusTxt });\n  }\n  switch (status) {\n    case 'unauthenticated':\n      return 401;\n    case 'permission-denied':\n      return 403;\n    case 'internal':\n      return 0;\n    case 'invalid-argument':\n      return 400;\n    case 'not-found':\n      return 404;\n    case 'aborted':\n      return 409;\n    case 'resource-exhausted':\n      return 429;\n    case 'cancelled':\n      return 499;\n    case 'internal':\n      return 500;\n    case 'unimplemented':\n      return 501;\n    case 'unavailable':\n      return 503;\n    case 'deadline-exceeded':\n      return 504;\n    default:\n      return 200;\n  }\n}\n","import { doc, getDoc, getDocs } from 'firebase/firestore';\nimport { FireStoreCollectionRef, FireStoreQuery } from 'misc/firebase-models';\nimport {\n  getAbsolutePath,\n  IFirestoreLogger,\n  log,\n  logWarn,\n  messageTypes,\n  parseFireStoreDocument,\n} from '../../misc';\nimport { RAFirebaseOptions } from '../options';\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\n\ntype IResourceItem = {} & { id: string; deleted?: boolean };\nexport interface IResource {\n  path: string;\n  pathAbsolute: string;\n  collection: FireStoreCollectionRef;\n  list: Array<IResourceItem>;\n}\n\nexport class ResourceManager {\n  private resources: Record<string, IResource> = {};\n\n  constructor(\n    private fireWrapper: IFirebaseWrapper,\n    private options: RAFirebaseOptions,\n    private flogger: IFirestoreLogger\n  ) {\n    this.fireWrapper.OnUserLogout(() => {\n      this.resources = {};\n    });\n  }\n\n  public async TryGetResource(\n    resourceName: string,\n    refresh?: 'REFRESH',\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    if (refresh) {\n      await this.RefreshResource(resourceName, collectionQuery);\n    }\n    return this.TryGetResourcePromise(resourceName, collectionQuery);\n  }\n\n  public GetResource(relativePath: string): IResource {\n    const resource: IResource = this.resources[relativePath];\n    if (!resource) {\n      throw new Error(\n        `react-admin-firebase: Can't find resource: \"${relativePath}\"`\n      );\n    }\n    return resource;\n  }\n\n  public async TryGetResourcePromise(\n    relativePath: string,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    log('resourceManager.TryGetResourcePromise', {\n      relativePath,\n      collectionQuery,\n    });\n    await this.initPath(relativePath);\n\n    const resource: IResource = this.resources[relativePath];\n    if (!resource) {\n      throw new Error(\n        `react-admin-firebase: Cant find resource: \"${relativePath}\"`\n      );\n    }\n    return resource;\n  }\n\n  public async RefreshResource(\n    relativePath: string,\n    collectionQuery: messageTypes.CollectionQueryType | undefined\n  ) {\n    if (this.options?.lazyLoading?.enabled) {\n      logWarn('resourceManager.RefreshResource', {\n        warn: 'RefreshResource is not available in lazy loading mode',\n      });\n      throw new Error(\n        'react-admin-firebase: RefreshResource is not available in lazy loading mode'\n      );\n    }\n\n    log('resourceManager.RefreshResource', { relativePath, collectionQuery });\n    await this.initPath(relativePath);\n    const resource = this.resources[relativePath];\n\n    const collectionRef = resource.collection;\n    const collectionOrQuery = this.applyQuery(collectionRef, collectionQuery);\n    const newDocs = await getDocs(collectionOrQuery);\n\n    resource.list = [];\n    newDocs.forEach((d) =>\n      resource.list.push(parseFireStoreDocument<IResourceItem>(d))\n    );\n\n    const count = newDocs.docs.length;\n    this.flogger.logDocument(count)();\n    log('resourceManager.RefreshResource', {\n      newDocs,\n      resource,\n      collectionPath: collectionRef.path,\n    });\n  }\n\n  public async GetSingleDoc(relativePath: string, docId: string) {\n    await this.initPath(relativePath);\n    const resource = this.GetResource(relativePath);\n    this.flogger.logDocument(1)();\n    const docSnap = await getDoc(doc(resource.collection, docId));\n    if (!docSnap.exists) {\n      throw new Error('react-admin-firebase: No id found matching: ' + docId);\n    }\n    const result = parseFireStoreDocument(docSnap);\n    log('resourceManager.GetSingleDoc', {\n      relativePath,\n      resource,\n      docId,\n      docSnap,\n      result,\n    });\n    return result;\n  }\n\n  private async initPath(relativePath: string): Promise<void> {\n    const rootRef = this.options && this.options.rootRef;\n    const absolutePath = getAbsolutePath(rootRef, relativePath);\n    const hasBeenInited = !!this.resources[relativePath];\n    log('resourceManager.initPath()', {\n      absolutePath,\n      hasBeenInited,\n    });\n    if (hasBeenInited) {\n      log('resourceManager.initPath() has been initialized already...');\n      return;\n    }\n    const collection = this.fireWrapper.dbGetCollection(absolutePath);\n    const list: Array<IResourceItem> = [];\n    const resource: IResource = {\n      collection,\n      list,\n      path: relativePath,\n      pathAbsolute: absolutePath,\n    };\n    this.resources[relativePath] = resource;\n    log('resourceManager.initPath() setting resource...', {\n      resource,\n      allResources: this.resources,\n      collection: collection,\n      collectionPath: collection.path,\n    });\n  }\n\n  public async getUserIdentifier(): Promise<string> {\n    const identifier = this.options.associateUsersById\n      ? await this.getCurrentUserId()\n      : await this.getCurrentUserEmail();\n    return identifier;\n  }\n\n  private async getCurrentUserEmail() {\n    const user = await this.fireWrapper.authGetUserLoggedIn();\n    if (user) {\n      return user.email as string;\n    } else {\n      return 'annonymous user';\n    }\n  }\n  private async getCurrentUserId() {\n    const user = await this.fireWrapper.authGetUserLoggedIn();\n    if (user) {\n      return user.uid;\n    } else {\n      return 'annonymous user';\n    }\n  }\n\n  private applyQuery(\n    collection: FireStoreCollectionRef,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): FireStoreCollectionRef | FireStoreQuery {\n    const collRef = collectionQuery ? collectionQuery(collection) : collection;\n\n    log('resourceManager.applyQuery() ...', {\n      collection,\n      collectionQuery: (collectionQuery || '-').toString(),\n      collRef,\n    });\n    return collRef;\n  }\n}\n","import { doc } from 'firebase/firestore';\nimport { get, set } from 'lodash';\nimport {\n  AddCreatedByFields,\n  AddUpdatedByFields,\n  dispatch,\n  IFirestoreLogger,\n  log,\n  logError,\n  parseStoragePath,\n  translateDocToFirestore,\n} from '../../misc';\nimport {\n  TASK_CANCELED,\n  TASK_PAUSED,\n  TASK_RUNNING,\n} from '../../misc/firebase-models';\nimport { RAFirebaseOptions } from '../options';\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\nimport { IResource, ResourceManager } from './ResourceManager';\n\nexport class FireClient {\n  public rm: ResourceManager;\n\n  constructor(\n    public fireWrapper: IFirebaseWrapper,\n    public options: RAFirebaseOptions,\n    public flogger: IFirestoreLogger\n  ) {\n    this.rm = new ResourceManager(this.fireWrapper, this.options, this.flogger);\n  }\n\n  public checkRemoveIdField(obj: any, docId: string) {\n    if (!this.options.dontAddIdFieldToDoc) {\n      obj.id = docId;\n    }\n  }\n\n  public transformToDb(\n    resourceName: string,\n    documentData: any,\n    docId: string\n  ): any {\n    if (typeof this.options.transformToDb === 'function') {\n      return this.options.transformToDb(resourceName, documentData, docId);\n    }\n    return documentData;\n  }\n\n  public async parseDataAndUpload(r: IResource, id: string, data: any) {\n    if (!data) {\n      return data;\n    }\n    const docPath = doc(r.collection, id).path;\n\n    const result = translateDocToFirestore(data);\n    const uploads = result.uploads;\n    await Promise.all(\n      uploads.map(async (u) => {\n        const storagePath = parseStoragePath(\n          u.rawFile,\n          docPath,\n          u.fieldDotsPath,\n          !!this.options.useFileNamesInStorage\n        );\n        const link = await this.saveFile(storagePath, u.rawFile);\n        set(data, u.fieldDotsPath + '.src', link);\n      })\n    );\n    return data;\n  }\n\n  public async addCreatedByFields(obj: any) {\n    return AddCreatedByFields(obj, this.fireWrapper, this.rm, this.options);\n  }\n\n  public async addUpdatedByFields(obj: any) {\n    return AddUpdatedByFields(obj, this.fireWrapper, this.rm, this.options);\n  }\n\n  private async saveFile(\n    storagePath: string,\n    rawFile: any\n  ): Promise<string | undefined> {\n    log('saveFile() saving file...', { storagePath, rawFile });\n    try {\n      const { task, taskResult, downloadUrl } = this.fireWrapper.putFile(\n        storagePath,\n        rawFile\n      );\n      const { name } = rawFile;\n      // monitor upload status & progress\n      dispatch('FILE_UPLOAD_WILL_START', name);\n      task.on('state_changed', (snapshot) => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        log('Upload is ' + progress + '% done');\n        dispatch('FILE_UPLOAD_PROGRESS', name, progress);\n        switch (snapshot.state) {\n          case TASK_PAUSED:\n            log('Upload is paused');\n            dispatch('FILE_UPLOAD_PAUSED', name);\n            break;\n          case TASK_RUNNING:\n            log('Upload is running');\n            dispatch('FILE_UPLOAD_RUNNING', name);\n            break;\n          case TASK_CANCELED:\n            log('Upload has been canceled');\n            dispatch('FILE_UPLOAD_CANCELED', name);\n            break;\n          // case storage.TaskState.ERROR:\n          // already handled by catch\n          // case storage.TaskState.SUCCESS:\n          // already handled by then\n        }\n      });\n      const [getDownloadURL] = await Promise.all([downloadUrl, taskResult]);\n      dispatch('FILE_UPLOAD_COMPLETE', name);\n      dispatch('FILE_SAVED', name);\n      log('saveFile() saved file', {\n        storagePath,\n        taskResult,\n        getDownloadURL,\n      });\n      return this.options.relativeFilePaths ? storagePath : getDownloadURL;\n    } catch (storageError) {\n      if (get(storageError, 'code') === 'storage/unknown') {\n        logError(\n          'saveFile() error saving file, No bucket found! Try clicking \"Get Started\" in firebase -> storage',\n          { storageError }\n        );\n      } else {\n        logError('saveFile() error saving file', {\n          storageError,\n        });\n      }\n    }\n  }\n}\n","import { joinPaths } from './pathHelper';\n\nexport function parseStoragePath(\n  rawFile: File,\n  docPath: string,\n  fieldPath: string,\n  useFileName: boolean\n): string {\n  const fileNameBits = rawFile instanceof File ? rawFile.name.split('.') : [];\n\n  const fileExtension = !fileNameBits?.length ? '' : '.' + fileNameBits.pop();\n\n  return useFileName\n    ? joinPaths(docPath, fieldPath, rawFile.name)\n    : joinPaths(docPath, fieldPath + fileExtension);\n}\n","import { RAFirebaseOptions } from 'index';\nimport { IFirebaseWrapper, ResourceManager } from 'providers/database';\n\nexport async function AddCreatedByFields(\n  obj: any,\n  fireWrapper: IFirebaseWrapper,\n  rm: Pick<ResourceManager, 'getUserIdentifier'>,\n  options: Pick<\n    RAFirebaseOptions,\n    | 'associateUsersById'\n    | 'disableMeta'\n    | 'renameMetaFields'\n    | 'metaFieldCasing'\n  >\n) {\n  if (options.disableMeta) {\n    return;\n  }\n  const currentUserIdentifier = await rm.getUserIdentifier();\n  const createAtSelector = GetSelectorsCreateAt(options);\n  const createBySelector = GetSelectorsCreateBy(options);\n  obj[createAtSelector] = fireWrapper.serverTimestamp();\n  obj[createBySelector] = currentUserIdentifier;\n}\n\nexport async function AddUpdatedByFields(\n  obj: any,\n  fireWrapper: IFirebaseWrapper,\n  rm: Pick<ResourceManager, 'getUserIdentifier'>,\n  options: Pick<\n    RAFirebaseOptions,\n    | 'associateUsersById'\n    | 'disableMeta'\n    | 'renameMetaFields'\n    | 'metaFieldCasing'\n  >\n) {\n  if (options.disableMeta) {\n    return;\n  }\n  const currentUserIdentifier = await rm.getUserIdentifier();\n  const updateAtSelector = GetSelectorsUpdateAt(options);\n  const updateBySelector = GetSelectorsUpdateBy(options);\n  obj[updateAtSelector] = fireWrapper.serverTimestamp();\n  obj[updateBySelector] = currentUserIdentifier;\n}\n\nexport function GetSelectorsUpdateAt(\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.updated_at) {\n    return options.renameMetaFields.updated_at;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = 'lastupdate';\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === 'camel') {\n    return 'lastUpdate';\n  }\n  if (casing === 'snake') {\n    return 'last_update';\n  }\n  if (casing === 'pascal') {\n    return 'LastUpdate';\n  }\n  if (casing === 'kebab') {\n    return 'last-update';\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsUpdateBy(\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.updated_by) {\n    return options.renameMetaFields.updated_by;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = 'updatedby';\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === 'camel') {\n    return 'updatedBy';\n  }\n  if (casing === 'snake') {\n    return 'updated_by';\n  }\n  if (casing === 'pascal') {\n    return 'UpdatedBy';\n  }\n  if (casing === 'kebab') {\n    return 'updated-by';\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsCreateAt(\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.created_at) {\n    return options.renameMetaFields.created_at;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = 'createdate';\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === 'camel') {\n    return 'createDate';\n  }\n  if (casing === 'snake') {\n    return 'create_date';\n  }\n  if (casing === 'pascal') {\n    return 'CreateDate';\n  }\n  if (casing === 'kebab') {\n    return 'create-date';\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsCreateBy(\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.created_by) {\n    return options.renameMetaFields.created_by;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = 'createdby';\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === 'camel') {\n    return 'createdBy';\n  }\n  if (casing === 'snake') {\n    return 'created_by';\n  }\n  if (casing === 'pascal') {\n    return 'CreatedBy';\n  }\n  if (casing === 'kebab') {\n    return 'created-by';\n  }\n  return defautCase;\n}\n","import { FirebaseApp } from 'firebase/app';\nimport { Auth, User, UserCredential } from 'firebase/auth';\nimport {\n  CollectionReference,\n  DocumentData,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldValue,\n  Firestore,\n  OrderByDirection,\n  Query,\n  QueryDocumentSnapshot,\n  WriteBatch,\n} from 'firebase/firestore';\nimport {\n  FirebaseStorage,\n  StorageReference,\n  TaskState,\n  UploadTask,\n  UploadTaskSnapshot,\n} from 'firebase/storage';\n\nexport type FireUser = User;\nexport type FireApp = FirebaseApp;\n\nexport type FireStorage = FirebaseStorage;\nexport type FireStorageReference = StorageReference;\nexport type FireUploadTaskSnapshot = UploadTaskSnapshot;\nexport type FireUploadTask = UploadTask;\nexport type FireStoragePutFileResult = {\n  task: FireUploadTask;\n  taskResult: Promise<FireUploadTaskSnapshot>;\n  downloadUrl: Promise<string>;\n};\n\nexport type FireAuth = Auth;\nexport type FireAuthUserCredentials = UserCredential;\n\nexport type FireStore = Firestore;\nexport type FireStoreBatch = WriteBatch;\nexport type FireStoreTimeStamp = FieldValue;\nexport type FireStoreDocumentRef = DocumentReference;\nexport type FireStoreDocumentSnapshot = DocumentSnapshot<DocumentData>;\nexport type FireStoreCollectionRef = CollectionReference;\nexport type FireStoreQueryDocumentSnapshot = QueryDocumentSnapshot;\nexport type FireStoreQuery = Query;\nexport type FireStoreQueryOrder = OrderByDirection;\n\nexport const TASK_PAUSED = 'paused' as TaskState;\nexport const TASK_RUNNING = 'running' as TaskState;\nexport const TASK_CANCELED = 'cancelled' as TaskState;\n","import {\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  query,\n  QueryConstraint,\n  startAfter,\n  startAt,\n} from 'firebase/firestore';\nimport { ref } from 'firebase/storage';\nimport {\n  FireStoreCollectionRef,\n  FireStoreDocumentSnapshot,\n  FireStoreQuery,\n} from 'misc/firebase-models';\nimport { IFirestoreLogger, messageTypes } from '../../misc';\n\nexport function setQueryCursor(\n  document: FireStoreDocumentSnapshot,\n  params: messageTypes.IParamsGetList,\n  resourceName: string\n) {\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\n  localStorage.setItem(key, document.id);\n\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\n  if (!localCursorKeys) {\n    localStorage.setItem(allCursorsKey, JSON.stringify([key]));\n  } else {\n    const cursors: string[] = JSON.parse(localCursorKeys);\n    const newCursors = cursors.concat(key);\n    localStorage.setItem(allCursorsKey, JSON.stringify(newCursors));\n  }\n}\n\nexport async function getQueryCursor(\n  collection: FireStoreCollectionRef,\n  params: messageTypes.IParamsGetList,\n  resourceName: string,\n  flogger: IFirestoreLogger\n): Promise<FireStoreDocumentSnapshot | false> {\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\n  const docId = localStorage.getItem(key);\n  if (!docId) {\n    return false;\n  }\n\n  const docSnapshot = await getDoc(doc(collection, docId));\n  flogger.logDocument(1)();\n  if (docSnapshot.exists()) {\n    return docSnapshot;\n  }\n  return false;\n}\n\nexport function clearQueryCursors(resourceName: string) {\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\n  if (localCursorKeys) {\n    const cursors: string[] = JSON.parse(localCursorKeys);\n    cursors.forEach((cursor) => localStorage.removeItem(cursor));\n    localStorage.removeItem(allCursorsKey);\n  }\n}\n\nexport async function findLastQueryCursor(\n  collection: FireStoreCollectionRef,\n  queryConstraints: QueryConstraint[],\n  params: messageTypes.IParamsGetList,\n  resourceName: string,\n  flogger: IFirestoreLogger\n) {\n  if (!params.pagination) {\n    throw new Error('findLastQueryCursor: params.pagination is required but was not provided.');\n  }\n  const { page, perPage } = params.pagination;\n\n  let lastQueryCursor: FireStoreDocumentSnapshot | false = false;\n  let currentPage = page - 1;\n\n  const currentPageParams = {\n    ...params,\n    pagination: {\n      ...params.pagination,\n    },\n  };\n  while (!lastQueryCursor && currentPage > 1) {\n    currentPage--;\n    currentPageParams.pagination.page = currentPage;\n    console.log('getting query cursor currentPage=', currentPage);\n    lastQueryCursor = await getQueryCursor(\n      collection,\n      currentPageParams,\n      resourceName,\n      flogger\n    );\n  }\n  const pageLimit = (page - currentPage) * perPage;\n  const isFirst = currentPage === 1;\n\n  function getQuery() {\n    if (isFirst) {\n      return query(collection, ...[...queryConstraints, limit(pageLimit)]);\n    } else {\n      return query(\n        collection,\n        ...[...queryConstraints, startAfter(lastQueryCursor), limit(pageLimit)]\n      );\n    }\n  }\n\n  const newQuery = getQuery();\n  const snapshots = await getDocs(newQuery);\n  const docsLength = snapshots.docs.length;\n  flogger.logDocument(docsLength)();\n  const lastDocIndex = docsLength - 1;\n  const lastDocRef = snapshots.docs[lastDocIndex];\n  return lastDocRef;\n}\n","import {\n  getDocs,\n  limit,\n  orderBy,\n  query,\n  QueryConstraint,\n  startAfter,\n  where,\n} from 'firebase/firestore';\nimport {\n  FireStoreCollectionRef,\n  FireStoreQuery,\n  FireStoreQueryOrder,\n} from 'misc/firebase-models';\nimport { IFirestoreLogger, messageTypes } from '../../misc';\nimport { findLastQueryCursor, getQueryCursor } from './queryCursors';\n\ninterface ParamsToQueryOptions {\n  filters?: boolean;\n  sort?: boolean;\n  pagination?: boolean;\n}\n\ninterface QueryPair {\n  noPagination: FireStoreQuery;\n  withPagination: FireStoreQuery;\n}\n\nconst defaultParamsToQueryOptions = {\n  filters: true,\n  sort: true,\n  pagination: true,\n};\n\nexport async function paramsToQuery<\n  TParams extends messageTypes.IParamsGetList\n>(\n  collection: FireStoreCollectionRef,\n  params: TParams,\n  resourceName: string,\n  flogger: IFirestoreLogger,\n  options: ParamsToQueryOptions = defaultParamsToQueryOptions\n): Promise<QueryPair> {\n  const filterConstraints = options.filters\n    ? getFiltersConstraints(params.filter)\n    : [];\n\n  const sortConstraints = options.sort ? getSortConstraints(params.sort) : [];\n\n  const paginationConstraints = options.pagination\n    ? await getPaginationConstraints(\n        collection,\n        [...filterConstraints, ...sortConstraints],\n        params,\n        resourceName,\n        flogger\n      )\n    : [];\n\n  return {\n    noPagination: query(\n      collection,\n      ...[...filterConstraints, ...sortConstraints]\n    ),\n    withPagination: query(\n      collection,\n      ...[...filterConstraints, ...sortConstraints, ...paginationConstraints]\n    ),\n  };\n}\n\nexport function getFiltersConstraints(filters: {\n  [fieldName: string]: any;\n}): QueryConstraint[] {\n  return Object.entries(filters).flatMap(([fieldName, fieldValue]) => {\n    if (Array.isArray(fieldValue)) {\n      return [where(fieldName, 'array-contains-any', fieldValue)];\n    } else if (Object.keys(filters).length === 1 && isNaN(fieldValue)) {\n      return [\n        where(fieldName, '>=', fieldValue),\n        where(fieldName, '<', fieldValue + 'z'),\n      ];\n    } else {\n      return [where(fieldName, '==', fieldValue)];\n    }\n  });\n}\n\nexport function getSortConstraints(sort: {\n  field: string;\n  order: \"ASC\" | \"DESC\";\n} | undefined): QueryConstraint[] {\n  if (sort != null && sort.field !== 'id') {\n    const { field, order } = sort;\n    const parsedOrder = order.toLocaleLowerCase() as FireStoreQueryOrder;\n    return [orderBy(field, parsedOrder)];\n  }\n  return [];\n}\n\nasync function getPaginationConstraints<\n  TParams extends messageTypes.IParamsGetList\n>(\n  collectionRef: FireStoreCollectionRef,\n  queryConstraints: QueryConstraint[],\n  params: TParams,\n  resourceName: string,\n  flogger: IFirestoreLogger\n): Promise<QueryConstraint[]> {\n  if (!params.pagination) {\n    throw new Error('getPaginationConstraints: params.pagination is required but was not provided.');\n  }\n  const { page, perPage } = params.pagination;\n\n  if (page === 1) {\n    return [limit(perPage)];\n  } else {\n    let queryCursor = await getQueryCursor(\n      collectionRef,\n      params,\n      resourceName,\n      flogger\n    );\n    if (!queryCursor) {\n      queryCursor = await findLastQueryCursor(\n        collectionRef,\n        queryConstraints,\n        params,\n        resourceName,\n        flogger\n      );\n    }\n    return [startAfter(queryCursor), limit(perPage)];\n  }\n}\n\nexport function getFullParamsForQuery<\n  TParams extends messageTypes.IParamsGetList\n>(reactAdminParams: TParams, softdeleteEnabled: boolean): TParams {\n  return {\n    ...reactAdminParams,\n    filter: softdeleteEnabled\n      ? {\n          deleted: false,\n          ...reactAdminParams.filter,\n        }\n      : reactAdminParams.filter,\n  };\n}\n\nexport function getNextPageParams<TParams extends messageTypes.IParamsGetList>(\n  params: TParams\n): TParams {\n  if (!params.pagination) {\n    throw new Error('getNextPageParams: params.pagination is required but was not provided.');\n  }\n  return {\n    ...params,\n    pagination: {\n      ...params.pagination,\n      page: params.pagination.page + 1,\n    },\n  };\n}\n","import { getCountFromServer, getDocs } from 'firebase/firestore';\nimport {\n  log,\n  messageTypes,\n  parseFireStoreDocument,\n  recursivelyMapStorageUrls,\n} from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient, IResource, ResourceManager } from '../database';\nimport { RAFirebaseOptions } from '../options';\nimport {\n  getFullParamsForQuery,\n  getNextPageParams,\n  paramsToQuery,\n} from './paramsToQuery';\nimport { setQueryCursor } from './queryCursors';\n\nexport class FirebaseLazyLoadingClient {\n  constructor(\n    private readonly options: RAFirebaseOptions,\n    private readonly rm: ResourceManager,\n    private client: FireClient\n  ) {}\n\n  public async apiGetList<T extends ra.RaRecord>(\n    resourceName: string,\n    reactAdminParams: ra.GetListParams\n  ): Promise<ra.GetListResult<T>> {\n    const r = await this.tryGetResource(resourceName);\n    const params = getFullParamsForQuery(\n      {\n        ...reactAdminParams,\n        sort: reactAdminParams.sort\n          ? {\n              ...reactAdminParams.sort,\n              order: reactAdminParams.sort.order.toUpperCase() as 'ASC' | 'DESC',\n            }\n          : undefined,\n      },\n      !!this.options.softDelete\n    );\n\n    log('apiGetListLazy', { resourceName, params });\n\n    const { noPagination, withPagination } = await paramsToQuery(\n      r.collection,\n      params,\n      resourceName,\n      this.client.flogger\n    );\n\n    const snapshots = await getDocs(withPagination);\n\n    const resultsCount = snapshots.docs.length;\n    if (!resultsCount) {\n      log('apiGetListLazy', {\n        message: 'There are not records for given query',\n      });\n      return { data: [], total: 0 };\n    }\n    this.client.flogger.logDocument(resultsCount)();\n\n    // tslint:disable-next-line\n    const data = snapshots.docs.map((d) => parseFireStoreDocument<T>(d));\n\n    const nextPageCursor = snapshots.docs[snapshots.docs.length - 1];\n    // After fetching documents save queryCursor for next page\n    setQueryCursor(nextPageCursor, getNextPageParams(params), resourceName);\n    // Hardcoded to allow next pages, as we don't have total number of items\n\n    let total = await getCountFromServer(noPagination);\n\n    if (this.options.relativeFilePaths) {\n      const parsedData = await Promise.all(\n        data.map(async (doc: any) => {\n          for (let fieldName in doc) {\n            doc[fieldName] = await recursivelyMapStorageUrls(\n              this.client.fireWrapper,\n              doc[fieldName]\n            );\n          }\n          return doc;\n        })\n      );\n\n      log('apiGetListLazy result', {\n        docs: parsedData,\n        resource: r,\n        collectionPath: r.collection.path,\n      });\n\n      return {\n        data: parsedData,\n        total: total.data().count,\n      };\n    }\n\n    log('apiGetListLazy result', {\n      docs: data,\n      resource: r,\n      collectionPath: r.collection.path,\n    });\n\n    return { data, total: total.data().count };\n  }\n\n  public async apiGetManyReference(\n    resourceName: string,\n    reactAdminParams: messageTypes.IParamsGetManyReference\n  ): Promise<messageTypes.IResponseGetManyReference> {\n    const r = await this.tryGetResource(resourceName);\n    log('apiGetManyReferenceLazy', {\n      resourceName,\n      resource: r,\n      reactAdminParams,\n    });\n    const filterWithTarget = {\n      ...reactAdminParams.filter,\n      [reactAdminParams.target]: reactAdminParams.id,\n    };\n    const params = getFullParamsForQuery(\n      {\n        ...reactAdminParams,\n        filter: filterWithTarget,\n      },\n      !!this.options.softDelete\n    );\n\n    const { withPagination } = await paramsToQuery(\n      r.collection,\n      params,\n      resourceName,\n      this.client.flogger\n    );\n\n    const snapshots = await getDocs(withPagination);\n    const resultsCount = snapshots.docs.length;\n    this.client.flogger.logDocument(resultsCount)();\n    const data = snapshots.docs.map(parseFireStoreDocument);\n    if (this.options.relativeFilePaths) {\n      const parsedData = await Promise.all(\n        data.map(async (doc: any) => {\n          for (let fieldName in doc) {\n            doc[fieldName] = await recursivelyMapStorageUrls(\n              this.client.fireWrapper,\n              doc[fieldName]\n            );\n          }\n          return doc;\n        })\n      );\n\n      log('apiGetManyReferenceLazy result', {\n        docs: parsedData,\n        resource: r,\n        collectionPath: r.collection.path,\n      });\n\n      return {\n        data: parsedData,\n        total: data.length,\n      };\n    }\n\n    log('apiGetManyReferenceLazy result', {\n      docs: data,\n      resource: r,\n      collectionPath: r.collection.path,\n    });\n    return { data, total: data.length };\n  }\n\n  private async tryGetResource(\n    resourceName: string,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    return this.rm.TryGetResourcePromise(resourceName, collectionQuery);\n  }\n}\n","import {\n  getAbsolutePath,\n  log,\n  logError,\n  logger,\n  MakeFirestoreLogger,\n  retrieveStatusCode,\n} from '../misc';\nimport { FireApp } from '../misc/firebase-models';\nimport * as ra from '../misc/react-admin-models';\nimport { Create, Delete, DeleteMany, Update, UpdateMany } from './commands';\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\nimport { FireClient } from './database/FireClient';\nimport { RAFirebaseOptions } from './options';\nimport { GetList, GetMany, GetManyReference, GetOne } from './queries';\n\nexport interface IDataProvider extends ra.DataProvider {\n  app: FireApp;\n}\n\nexport function DataProvider(\n  firebaseConfig: {},\n  optionsInput?: RAFirebaseOptions\n): IDataProvider {\n  const options = optionsInput || {};\n  verifyDataProviderArgs(firebaseConfig, options);\n\n  const flogger = MakeFirestoreLogger(options);\n  logger.SetEnabled(!!options?.logging);\n  flogger.SetEnabled(!!options?.firestoreCostsLogger?.enabled);\n  flogger.ResetCount(!options?.firestoreCostsLogger?.persistCount);\n  log('Creating FirebaseDataProvider', {\n    firebaseConfig,\n    options,\n  });\n\n  const fireWrapper = new FirebaseWrapper(optionsInput, firebaseConfig);\n\n  async function run<T>(cb: () => Promise<T>) {\n    let res: any;\n    try {\n      res = await cb();\n      return res;\n    } catch (error) {\n      const errorMsg = ((error as any) || '').toString();\n      const code = retrieveStatusCode(errorMsg);\n      const errorObj = { status: code, message: errorMsg, json: res };\n      logError('DataProvider:', error, { errorMsg, code, errorObj });\n      throw errorObj;\n    }\n  }\n  const client = new FireClient(fireWrapper, options, flogger);\n\n  const newProviderApi: IDataProvider = {\n    app: fireWrapper.GetApp(),\n    getList<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.GetListParams\n    ): Promise<ra.GetListResult<RecordType>> {\n      return run(() => GetList<RecordType>(resource, params, client));\n    },\n    getOne<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.GetOneParams\n    ): Promise<ra.GetOneResult<RecordType>> {\n      return run(() => GetOne<RecordType>(resource, params, client));\n    },\n    getMany<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.GetManyParams\n    ): Promise<ra.GetManyResult<RecordType>> {\n      return run(() => GetMany<RecordType>(resource, params, client));\n    },\n    getManyReference<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.GetManyReferenceParams\n    ): Promise<ra.GetManyReferenceResult<RecordType>> {\n      return run(() => GetManyReference<RecordType>(resource, params, client));\n    },\n    update<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.UpdateParams\n    ): Promise<ra.UpdateResult<RecordType>> {\n      return run(() => Update<RecordType>(resource, params, client));\n    },\n    updateMany(\n      resource: string,\n      params: ra.UpdateManyParams\n    ): Promise<ra.UpdateManyResult> {\n      return run(() => UpdateMany(resource, params, client));\n    },\n    create<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.CreateParams\n    ): Promise<ra.CreateResult<RecordType>> {\n      return run(() => Create<RecordType>(resource, params, client));\n    },\n    delete<RecordType extends ra.RaRecord = ra.RaRecord>(\n      resource: string,\n      params: ra.DeleteParams\n    ): Promise<ra.DeleteResult<RecordType>> {\n      return run(() => Delete(resource, params, client));\n    },\n    deleteMany(\n      resource: string,\n      params: ra.DeleteManyParams\n    ): Promise<ra.DeleteManyResult> {\n      return run(() => DeleteMany(resource, params, client));\n    },\n  };\n\n  return newProviderApi;\n}\n\nfunction verifyDataProviderArgs(\n  firebaseConfig: {},\n  options?: RAFirebaseOptions\n) {\n  const hasNoApp = !options || !options.app;\n  const hasNoConfig = !firebaseConfig;\n  if (hasNoConfig && hasNoApp) {\n    throw new Error(\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\n    );\n  }\n  if (options && options.rootRef) {\n    // Will throw error if rootRef doesn't point to a document\n    getAbsolutePath(options.rootRef, 'test');\n  }\n}\n","import {\n  filterArray,\n  log,\n  recursivelyMapStorageUrls,\n  sortArray,\n} from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database/FireClient';\nimport { FirebaseLazyLoadingClient } from '../lazy-loading/FirebaseLazyLoadingClient';\n\nexport async function GetList<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.GetListParams,\n  client: FireClient\n): Promise<ra.GetListResult<T>> {\n  log('GetList', { resourceName, params });\n  const { rm, fireWrapper, options } = client;\n\n  if (options?.lazyLoading?.enabled) {\n    const lazyClient = new FirebaseLazyLoadingClient(options, rm, client);\n    return lazyClient.apiGetList<T>(resourceName, params);\n  }\n\n  const filterSafe = params.filter || {};\n\n  const collectionQuery = filterSafe.collectionQuery;\n  delete filterSafe.collectionQuery;\n\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\n  const data = r.list;\n  if (params.sort != null) {\n    const { field, order } = params.sort;\n    if (order === 'ASC') {\n      sortArray(data, field, 'asc');\n    } else {\n      sortArray(data, field, 'desc');\n    }\n  }\n  let softDeleted = data;\n  if (options.softDelete && !Object.keys(filterSafe).includes('deleted')) {\n    softDeleted = data.filter((doc) => !doc.deleted);\n  }\n  const filteredData = filterArray(softDeleted, filterSafe);\n\n  if (!params.pagination) {\n    throw new Error('GetList: params.pagination is required but was not provided.');\n  }\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\n  const pageEnd = pageStart + params.pagination.perPage;\n  const dataPage = filteredData.slice(pageStart, pageEnd) as T[];\n  const total = filteredData.length;\n\n  if (options.relativeFilePaths) {\n    const fetchedData = await Promise.all(\n      dataPage.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\n    );\n    return {\n      data: fetchedData,\n      total,\n    };\n  }\n\n  return {\n    data: dataPage,\n    total,\n  };\n}\n","import { log, translateDocFromFirestore } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database/FireClient';\n\nexport async function GetOne<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.GetOneParams,\n  client: FireClient\n): Promise<ra.GetOneResult<T>> {\n  log('GetOne', { resourceName, params });\n  const { rm } = client;\n  try {\n    const id = params.id + '';\n    const dataSingle = await rm.GetSingleDoc(resourceName, id);\n    client.flogger.logDocument(1)();\n    return { data: dataSingle as T };\n  } catch (error) {\n    throw new Error(\n      'Error getting id: ' + params.id + ' from collection: ' + resourceName\n    );\n  }\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { log, recursivelyMapStorageUrls } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database/FireClient';\n\nexport async function GetMany<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.GetManyParams,\n  client: FireClient\n): Promise<ra.GetManyResult<T>> {\n  const { rm, options, fireWrapper } = client;\n  const r = await rm.TryGetResource(resourceName);\n  const ids = params.ids;\n  log('GetMany', { resourceName, resource: r, params, ids });\n  const matchDocSnaps = await Promise.all(\n    ids.map((idObj) => {\n      if (typeof idObj === 'string') {\n        return getDoc(doc(r.collection, idObj));\n      }\n      // Will get and resolve reference documents into the current doc\n      return getDoc(doc(r.collection, (idObj as any)['___refid']));\n    })\n  );\n  client.flogger.logDocument(ids.length)();\n  const matches = matchDocSnaps.map(\n    (snap) => ({ ...snap.data(), id: snap.id } as T)\n  );\n  const permittedData = options.softDelete\n    ? matches.filter((row) => !row['deleted'])\n    : matches;\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      permittedData.map((d) => recursivelyMapStorageUrls(fireWrapper, d))\n    );\n    return {\n      data,\n    };\n  }\n\n  return {\n    data: permittedData,\n  };\n}\n","import {\n  filterArray,\n  log,\n  recursivelyMapStorageUrls,\n  sortArray,\n} from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database/FireClient';\n\nexport async function GetManyReference<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.GetManyReferenceParams,\n  client: FireClient\n): Promise<ra.GetManyReferenceResult<T>> {\n  const { rm, options, fireWrapper } = client;\n  log('GetManyReference', { resourceName, params });\n  const filterSafe = params.filter || {};\n  const collectionQuery = filterSafe.collectionQuery;\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\n  delete filterSafe.collectionQuery;\n  log('apiGetManyReference', { resourceName, resource: r, params });\n  const data = r.list;\n  const targetField = params.target;\n  const targetValue = params.id;\n  let softDeleted = data;\n  if (options.softDelete) {\n    softDeleted = data.filter((doc) => !doc['deleted']);\n  }\n  const filteredData = filterArray(softDeleted, filterSafe);\n  const targetIdFilter: Record<string, ra.Identifier> = {};\n  targetIdFilter[targetField] = targetValue;\n  const permittedData = filterArray(filteredData, targetIdFilter);\n  if (params.sort != null) {\n    const { field, order } = params.sort;\n    if (order === 'ASC') {\n      sortArray(permittedData, field, 'asc');\n    } else {\n      sortArray(permittedData, field, 'desc');\n    }\n  }\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\n  const pageEnd = pageStart + params.pagination.perPage;\n  const dataPage = permittedData.slice(pageStart, pageEnd) as T[];\n  const total = permittedData.length;\n\n  if (options.relativeFilePaths) {\n    const fetchedData = await Promise.all(\n      permittedData.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\n    );\n    return { data: fetchedData, total };\n  }\n\n  return { data: dataPage, total };\n}\n","import { doc, updateDoc } from 'firebase/firestore';\nimport { log } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database';\n\nexport async function Update<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.UpdateParams,\n  client: FireClient\n): Promise<ra.UpdateResult<T>> {\n  const { rm } = client;\n  log('Update', { resourceName, params });\n  const id = params.id + '';\n  delete params.data.id;\n  const r = await rm.TryGetResource(resourceName);\n  log('Update', { resourceName, resource: r, params });\n  const data = await client.parseDataAndUpload(r, id, params.data);\n  const docObj = { ...data };\n  client.checkRemoveIdField(docObj, id);\n  await client.addUpdatedByFields(docObj);\n  const docObjTransformed = client.transformToDb(resourceName, docObj, id);\n  await updateDoc(doc(r.collection, id), docObjTransformed);\n  return {\n    data: {\n      ...data,\n      id: id,\n    },\n  };\n}\n","import { doc, updateDoc } from 'firebase/firestore';\nimport { log } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database';\n\nexport async function UpdateMany(\n  resourceName: string,\n  params: ra.UpdateManyParams,\n  client: FireClient\n): Promise<ra.UpdateManyResult> {\n  const { rm } = client;\n  log('UpdateMany', { resourceName, params });\n  delete params.data.id;\n  const r = await rm.TryGetResource(resourceName);\n  log('UpdateMany', { resourceName, resource: r, params });\n  const ids = params.ids;\n  const returnData = await Promise.all(\n    ids.map(async (id) => {\n      const idStr = id + '';\n      const data = await client.parseDataAndUpload(r, idStr, params.data);\n      const docObj = { ...data };\n      client.checkRemoveIdField(docObj, idStr);\n      await client.addUpdatedByFields(docObj);\n      const docObjTransformed = client.transformToDb(\n        resourceName,\n        docObj,\n        idStr\n      );\n      await updateDoc(doc(r.collection, idStr), docObjTransformed);\n      return {\n        ...data,\n        id: idStr,\n      };\n    })\n  );\n  return {\n    data: returnData,\n  };\n}\n","import { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { log } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database/FireClient';\n\nexport async function Create<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.CreateParams,\n  client: FireClient\n): Promise<ra.CreateResult<T>> {\n  const { rm, fireWrapper } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log('Create', { resourceName, resource: r, params });\n  const hasOverridenDocId = params.data && params.data.id;\n  log('Create', { hasOverridenDocId });\n  if (hasOverridenDocId) {\n    const overridenId = params.data.id;\n    const exists = (await getDoc(doc(r.collection, overridenId))).exists();\n    if (exists) {\n      throw new Error(\n        `the id:\"${overridenId}\" already exists, please use a unique string if overriding the 'id' field`\n      );\n    }\n\n    const createData = await client.parseDataAndUpload(\n      r,\n      overridenId,\n      params.data\n    );\n    if (!overridenId) {\n      throw new Error('id must be a valid string');\n    }\n    const createDocObj = { ...createData };\n    client.checkRemoveIdField(createDocObj, overridenId);\n    await client.addCreatedByFields(createDocObj);\n    await client.addUpdatedByFields(createDocObj);\n    const createDocObjTransformed = client.transformToDb(\n      resourceName,\n      createDocObj,\n      overridenId\n    );\n    log('Create', { docObj: createDocObj });\n    await setDoc(doc(r.collection, overridenId), createDocObjTransformed, {\n      merge: false,\n    });\n    return {\n      data: {\n        ...createDocObjTransformed,\n        id: overridenId,\n      },\n    };\n  }\n  const newId = fireWrapper.dbMakeNewId();\n  const data = await client.parseDataAndUpload(r, newId, params.data);\n  const docObj = { ...data };\n  client.checkRemoveIdField(docObj, newId);\n  await client.addCreatedByFields(docObj);\n  await client.addUpdatedByFields(docObj);\n  const docObjTransformed = client.transformToDb(resourceName, docObj, newId);\n  await setDoc(doc(r.collection, newId), docObjTransformed, { merge: false });\n  return {\n    data: {\n      ...docObjTransformed,\n      id: newId,\n    },\n  };\n}\n","import { deleteDoc, doc } from 'firebase/firestore';\nimport { log } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database/FireClient';\nimport { DeleteSoft } from './Delete.Soft';\n\nexport async function Delete<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.DeleteParams,\n  client: FireClient\n): Promise<ra.DeleteResult<T>> {\n  const { rm, options } = client;\n  if (options.softDelete) {\n    return DeleteSoft(resourceName, params, client);\n  }\n  const r = await rm.TryGetResource(resourceName);\n  log('apiDelete', { resourceName, resource: r, params });\n  try {\n    const id = params.id + '';\n\n    await deleteDoc(doc(r.collection, id));\n  } catch (error) {\n    throw new Error(error as any);\n  }\n  return {\n    data: params.previousData as T,\n  };\n}\n","import { doc, updateDoc } from 'firebase/firestore';\nimport { log, logError } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database';\n\nexport async function DeleteSoft<T extends ra.RaRecord>(\n  resourceName: string,\n  params: ra.DeleteParams,\n  client: FireClient\n): Promise<ra.DeleteResult<T>> {\n  const { rm } = client;\n  const id = params.id + '';\n  const r = await rm.TryGetResource(resourceName);\n  log('DeleteSoft', { resourceName, resource: r, params });\n  const docObj = { deleted: true };\n  await client.addUpdatedByFields(docObj);\n\n  updateDoc(doc(r.collection, id), docObj).catch((error) => {\n    logError('DeleteSoft error', { error });\n  });\n\n  return {\n    data: params.previousData as T,\n  };\n}\n","import { doc } from 'firebase/firestore';\nimport { log } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database';\nimport { DeleteManySoft } from './DeleteMany.Soft';\n\nexport async function DeleteMany(\n  resourceName: string,\n  params: ra.DeleteManyParams,\n  client: FireClient\n): Promise<ra.DeleteManyResult> {\n  const { options, rm, fireWrapper } = client;\n  if (options.softDelete) {\n    return DeleteManySoft(resourceName, params, client);\n  }\n  const r = await rm.TryGetResource(resourceName);\n  log('DeleteMany', { resourceName, resource: r, params });\n  const returnData: ra.Identifier[] = [];\n  const batch = fireWrapper.dbCreateBatch();\n  for (const id of params.ids) {\n    const idStr = id + '';\n    const docToDelete = doc(r.collection, idStr);\n    batch.delete(docToDelete);\n    returnData.push(id);\n  }\n\n  try {\n    await batch.commit();\n  } catch (error) {\n    throw new Error(error as any);\n  }\n  return { data: returnData };\n}\n","import { doc, updateDoc } from 'firebase/firestore';\nimport { log, logError } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\nimport { FireClient } from '../database';\n\nexport async function DeleteManySoft(\n  resourceName: string,\n  params: ra.DeleteManyParams,\n  client: FireClient\n): Promise<ra.DeleteManyResult> {\n  const { rm } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log('DeleteManySoft', { resourceName, resource: r, params });\n  const ids = params.ids;\n  const returnData = await Promise.all(\n    ids.map(async (id) => {\n      const idStr = id + '';\n      const docObj = { deleted: true };\n      await client.addUpdatedByFields(docObj);\n      updateDoc(doc(r.collection, idStr), docObj).catch((error) => {\n        logError('apiSoftDeleteMany error', { error });\n      });\n      return idStr;\n    })\n  );\n  return {\n    data: returnData,\n  };\n}\n"],"names":["sortArray","data","field","dir","sort","a","b","rawA","get","rawB","isAsc","Number","isFinite","basicSort","toLowerCase","Date","aValue","bValue","filterArray","searchFields","isEmpty","searchObjs","Object","keys","map","fieldName","getSubObjects","value","searchField","searchValue","tree","leaves","recursivelyWalk","obj","path","key","hasOwnProperty","objVal","currentPath","Array","push","objectFlatten","getFieldReferences","apply","filter","row","reduce","acc","cur","res","searchThis","toString","includes","isArray","doesRowMatch","LogNoOp","LoggerBase","title","cacheEnabledKey","this","_proto","prototype","isEnabled","localStorage","getItem","SetEnabled","setItem","removeItem","console","log","bind","warn","error","logger","KEY_SINGLE","logError","logWarn","dispatch","eventName","fileName","eventMonitor","document","getElementById","event","CustomEvent","detail","dispatchEvent","REF_INDENTIFIER","translateDocFromFirestore","result","parsedDoc","refdocs","recusivelyCheckObjectValue","input","fieldPath","toDate","index","isInputADocReference","documentReference","refDocPath","id","firestore","parent","recursivelyMapStorageUrls","fireWrapper","fieldValue","_exit","_temp2","_result","Promise","all","resolve","then","_recursivelyMapStorag","_recursivelyMapStorag2","e","reject","isFileField","has","_temp","getDownloadURL","ref","storage","src","_fieldValue$src","_extends","_catch","parseFireStoreDocument","doc","dataWithRefs","refDocs","d","set","applyRefDocs","getAbsolutePath","rootRef","relativePath","Error","rootRefValue","withSlashes","join","split","length","slice","joinPaths","call","arguments","translateDocToFirestore","uploads","recusivelyParseObjectValue","fieldDotsPath","refPath","fieldSlashesPath","rawFile","FirebaseWrapper","inputOptions","firebaseConfig","_app","_firestore","_storage","_auth","options","optionsSafe","window","app","apps","getApps","getApp","initializeApp","ObtainFirebaseApp","getFirestore","getStorage","getAuth","dbGetCollection","absolutePath","collection","dbCreateBatch","writeBatch","dbMakeNewId","OnUserLogout","callBack","onAuthStateChanged","user","isLoggedOut","putFile","storagePath","task","uploadBytesResumable","taskResult","rej","downloadUrl","t","url","getStorageDownloadUrl","fieldSrc","serverTimestamp","firestoreServerTimestamp","authSetPersistence","persistenceInput","_this2","persistenceResolved","browserLocalPersistence","inMemoryPersistence","browserSessionPersistence","setPersistence","authSigninEmailPassword","email","password","signInWithEmailAndPassword","authSignOut","signOut","authGetUserLoggedIn","_this5","auth","currentUser","unsubscribe","GetUserLogin","GetApp","db","AuthClient","optionsInput","persistence","HandleAuthLogin","params","_this","username","getUserLogin","HandleAuthLogout","HandleAuthError","errorHttp","status","retrieveStatusTxt","HandleAuthCheck","HandleGetPermissions","_this3","getIdTokenResult","token","claims","HandleGetIdentity","_this4","_ref","displayName","photoURL","uid","fullName","avatar","HandleGetJWTAuthTime","authTime","HandleGetJWTExpirationTime","_this6","expirationTime","HandleGetJWTSignInProvider","_this7","signInProvider","HandleGetJWTIssuedAtTime","_this8","issuedAtTime","HandleGetJWTToken","_this9","ResourceManager","flogger","resources","TryGetResource","resourceName","refresh","collectionQuery","TryGetResourcePromise","RefreshResource","GetResource","resource","initPath","_this4$options","_this4$options$lazyLo","lazyLoading","enabled","collectionRef","collectionOrQuery","applyQuery","getDocs","newDocs","list","forEach","logDocument","docs","collectionPath","GetSingleDoc","docId","getDoc","docSnap","exists","hasBeenInited","pathAbsolute","allResources","getUserIdentifier","associateUsersById","getCurrentUserId","getCurrentUserEmail","collRef","FireClient","rm","checkRemoveIdField","dontAddIdFieldToDoc","transformToDb","documentData","parseDataAndUpload","r","docPath","u","useFileName","fileNameBits","File","name","fileExtension","pop","parseStoragePath","useFileNamesInStorage","saveFile","link","addCreatedByFields","disableMeta","currentUserIdentifier","createAtSelector","renameMetaFields","created_at","casing","metaFieldCasing","defautCase","GetSelectorsCreateAt","createBySelector","created_by","GetSelectorsCreateBy","AddCreatedByFields","addUpdatedByFields","updateAtSelector","updated_at","GetSelectorsUpdateAt","updateBySelector","updated_by","GetSelectorsUpdateBy","AddUpdatedByFields","_this4$fireWrapper$pu","on","snapshot","progress","bytesTransferred","totalBytes","state","relativeFilePaths","storageError","_settle","pact","s","_Pact","o","v","observer","onFulfilled","onRejected","callback","_isSettledPact","thenable","getQueryCursor","btoa","JSON","stringify","docSnapshot","paramsToQuery","defaultParamsToQueryOptions","paginationConstraints","noPagination","query","concat","filterConstraints","sortConstraints","withPagination","filters","entries","flatMap","where","isNaN","parsedOrder","order","toLocaleLowerCase","orderBy","getSortConstraints","pagination","queryConstraints","_params$pagination","perPage","page","limit","queryCursor","_temp3","startAfter","pageLimit","currentPage","newQuery","lastQueryCursor","snapshots","docsLength","currentPageParams","_for","_getQueryCursor","findLastQueryCursor","_findLastQueryCursor","getPaginationConstraints","getFullParamsForQuery","reactAdminParams","softdeleteEnabled","deleted","FirebaseLazyLoadingClient","client","apiGetList","tryGetResource","toUpperCase","undefined","softDelete","resultsCount","message","total","allCursorsKey","localCursorKeys","newCursors","parse","setQueryCursor","getNextPageParams","getCountFromServer","count","_forIn","parsedData","_data$total","apiGetManyReference","_extends2","filterWithTarget","target","_ref2","_exit2","_temp5","_result2","_temp4","_temp6","VerifyAuthProviderArgs","logging","login","logout","checkAuth","checkError","getPermissions","getIdentity","getAuthUser","getJWTAuthTime","getJWTExpirationTime","getJWTSignInProvider","getJWTClaims","getJWTToken","_options$firestoreCos","_options$firestoreCos2","run","cb","_cb","errorMsg","code","statusTxt","regexResult","exec","retrieveStatusCode","errorObj","json","verifyDataProviderArgs","ResetCount","shouldReset","docCount","_options$lazyLoading","incrementBy","currentCountRaw","incremented","parseInt","incrementRead","MakeFirestoreLogger","firestoreCostsLogger","persistCount","getList","lazyClient","filterSafe","dataPage","_params$sort","softDeleted","filteredData","pageStart","fetchedData","GetList","getOne","dataSingle","GetOne","getMany","ids","idObj","matchDocSnaps","permittedData","matches","snap","GetMany","getManyReference","targetField","targetValue","targetIdFilter","GetManyReference","update","docObj","docObjTransformed","updateDoc","Update","updateMany","idStr","returnData","UpdateMany","create","newId","setDoc","merge","hasOverridenDocId","overridenId","_getDoc","createData","createDocObj","createDocObjTransformed","_data","Create","_delete","previousData","DeleteSoft","deleteDoc","Delete","deleteMany","DeleteManySoft","_step","batch","_iterator","_createForOfIteratorHelperLoose","done","docToDelete","commit","DeleteMany"],"mappings":"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"}